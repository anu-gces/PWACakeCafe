/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileCompleteImport } from './routes/profileComplete'
import { Route as HomeImport } from './routes/home'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as HomeWelcomeImport } from './routes/home/welcome'
import { Route as HomeStockImport } from './routes/home/stock'
import { Route as HomeNotificationsImport } from './routes/home/notifications'
import { Route as HomeEmployeeImport } from './routes/home/employee'
import { Route as HomeEditMenuImport } from './routes/home/editMenu'
import { Route as HomeDashboardImport } from './routes/home/dashboard'
import { Route as HomeBillingImport } from './routes/home/billing'

// Create Virtual Routes

const SplashscreenLazyImport = createFileRoute('/splashscreen')()
const HomeSettingsLazyImport = createFileRoute('/home/settings')()
const HomeHelpLazyImport = createFileRoute('/home/help')()
const HomeCalendarLazyImport = createFileRoute('/home/calendar')()
const HomeAccountLazyImport = createFileRoute('/home/account')()

// Create/Update Routes

const SplashscreenLazyRoute = SplashscreenLazyImport.update({
  id: '/splashscreen',
  path: '/splashscreen',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/splashscreen.lazy').then((d) => d.Route))

const ProfileCompleteRoute = ProfileCompleteImport.update({
  id: '/profileComplete',
  path: '/profileComplete',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/profileComplete.lazy').then((d) => d.Route),
)

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HomeSettingsLazyRoute = HomeSettingsLazyImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => HomeRoute,
} as any).lazy(() => import('./routes/home/settings.lazy').then((d) => d.Route))

const HomeHelpLazyRoute = HomeHelpLazyImport.update({
  id: '/help',
  path: '/help',
  getParentRoute: () => HomeRoute,
} as any).lazy(() => import('./routes/home/help.lazy').then((d) => d.Route))

const HomeCalendarLazyRoute = HomeCalendarLazyImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => HomeRoute,
} as any).lazy(() => import('./routes/home/calendar.lazy').then((d) => d.Route))

const HomeAccountLazyRoute = HomeAccountLazyImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => HomeRoute,
} as any).lazy(() => import('./routes/home/account.lazy').then((d) => d.Route))

const HomeWelcomeRoute = HomeWelcomeImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => HomeRoute,
} as any)

const HomeStockRoute = HomeStockImport.update({
  id: '/stock',
  path: '/stock',
  getParentRoute: () => HomeRoute,
} as any).lazy(() => import('./routes/home/stock.lazy').then((d) => d.Route))

const HomeNotificationsRoute = HomeNotificationsImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => HomeRoute,
} as any)

const HomeEmployeeRoute = HomeEmployeeImport.update({
  id: '/employee',
  path: '/employee',
  getParentRoute: () => HomeRoute,
} as any).lazy(() => import('./routes/home/employee.lazy').then((d) => d.Route))

const HomeEditMenuRoute = HomeEditMenuImport.update({
  id: '/editMenu',
  path: '/editMenu',
  getParentRoute: () => HomeRoute,
} as any)

const HomeDashboardRoute = HomeDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => HomeRoute,
} as any).lazy(() =>
  import('./routes/home/dashboard.lazy').then((d) => d.Route),
)

const HomeBillingRoute = HomeBillingImport.update({
  id: '/billing',
  path: '/billing',
  getParentRoute: () => HomeRoute,
} as any).lazy(() => import('./routes/home/billing.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/profileComplete': {
      id: '/profileComplete'
      path: '/profileComplete'
      fullPath: '/profileComplete'
      preLoaderRoute: typeof ProfileCompleteImport
      parentRoute: typeof rootRoute
    }
    '/splashscreen': {
      id: '/splashscreen'
      path: '/splashscreen'
      fullPath: '/splashscreen'
      preLoaderRoute: typeof SplashscreenLazyImport
      parentRoute: typeof rootRoute
    }
    '/home/billing': {
      id: '/home/billing'
      path: '/billing'
      fullPath: '/home/billing'
      preLoaderRoute: typeof HomeBillingImport
      parentRoute: typeof HomeImport
    }
    '/home/dashboard': {
      id: '/home/dashboard'
      path: '/dashboard'
      fullPath: '/home/dashboard'
      preLoaderRoute: typeof HomeDashboardImport
      parentRoute: typeof HomeImport
    }
    '/home/editMenu': {
      id: '/home/editMenu'
      path: '/editMenu'
      fullPath: '/home/editMenu'
      preLoaderRoute: typeof HomeEditMenuImport
      parentRoute: typeof HomeImport
    }
    '/home/employee': {
      id: '/home/employee'
      path: '/employee'
      fullPath: '/home/employee'
      preLoaderRoute: typeof HomeEmployeeImport
      parentRoute: typeof HomeImport
    }
    '/home/notifications': {
      id: '/home/notifications'
      path: '/notifications'
      fullPath: '/home/notifications'
      preLoaderRoute: typeof HomeNotificationsImport
      parentRoute: typeof HomeImport
    }
    '/home/stock': {
      id: '/home/stock'
      path: '/stock'
      fullPath: '/home/stock'
      preLoaderRoute: typeof HomeStockImport
      parentRoute: typeof HomeImport
    }
    '/home/welcome': {
      id: '/home/welcome'
      path: '/welcome'
      fullPath: '/home/welcome'
      preLoaderRoute: typeof HomeWelcomeImport
      parentRoute: typeof HomeImport
    }
    '/home/account': {
      id: '/home/account'
      path: '/account'
      fullPath: '/home/account'
      preLoaderRoute: typeof HomeAccountLazyImport
      parentRoute: typeof HomeImport
    }
    '/home/calendar': {
      id: '/home/calendar'
      path: '/calendar'
      fullPath: '/home/calendar'
      preLoaderRoute: typeof HomeCalendarLazyImport
      parentRoute: typeof HomeImport
    }
    '/home/help': {
      id: '/home/help'
      path: '/help'
      fullPath: '/home/help'
      preLoaderRoute: typeof HomeHelpLazyImport
      parentRoute: typeof HomeImport
    }
    '/home/settings': {
      id: '/home/settings'
      path: '/settings'
      fullPath: '/home/settings'
      preLoaderRoute: typeof HomeSettingsLazyImport
      parentRoute: typeof HomeImport
    }
  }
}

// Create and export the route tree

interface HomeRouteChildren {
  HomeBillingRoute: typeof HomeBillingRoute
  HomeDashboardRoute: typeof HomeDashboardRoute
  HomeEditMenuRoute: typeof HomeEditMenuRoute
  HomeEmployeeRoute: typeof HomeEmployeeRoute
  HomeNotificationsRoute: typeof HomeNotificationsRoute
  HomeStockRoute: typeof HomeStockRoute
  HomeWelcomeRoute: typeof HomeWelcomeRoute
  HomeAccountLazyRoute: typeof HomeAccountLazyRoute
  HomeCalendarLazyRoute: typeof HomeCalendarLazyRoute
  HomeHelpLazyRoute: typeof HomeHelpLazyRoute
  HomeSettingsLazyRoute: typeof HomeSettingsLazyRoute
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeBillingRoute: HomeBillingRoute,
  HomeDashboardRoute: HomeDashboardRoute,
  HomeEditMenuRoute: HomeEditMenuRoute,
  HomeEmployeeRoute: HomeEmployeeRoute,
  HomeNotificationsRoute: HomeNotificationsRoute,
  HomeStockRoute: HomeStockRoute,
  HomeWelcomeRoute: HomeWelcomeRoute,
  HomeAccountLazyRoute: HomeAccountLazyRoute,
  HomeCalendarLazyRoute: HomeCalendarLazyRoute,
  HomeHelpLazyRoute: HomeHelpLazyRoute,
  HomeSettingsLazyRoute: HomeSettingsLazyRoute,
}

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/home': typeof HomeRouteWithChildren
  '/profileComplete': typeof ProfileCompleteRoute
  '/splashscreen': typeof SplashscreenLazyRoute
  '/home/billing': typeof HomeBillingRoute
  '/home/dashboard': typeof HomeDashboardRoute
  '/home/editMenu': typeof HomeEditMenuRoute
  '/home/employee': typeof HomeEmployeeRoute
  '/home/notifications': typeof HomeNotificationsRoute
  '/home/stock': typeof HomeStockRoute
  '/home/welcome': typeof HomeWelcomeRoute
  '/home/account': typeof HomeAccountLazyRoute
  '/home/calendar': typeof HomeCalendarLazyRoute
  '/home/help': typeof HomeHelpLazyRoute
  '/home/settings': typeof HomeSettingsLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/home': typeof HomeRouteWithChildren
  '/profileComplete': typeof ProfileCompleteRoute
  '/splashscreen': typeof SplashscreenLazyRoute
  '/home/billing': typeof HomeBillingRoute
  '/home/dashboard': typeof HomeDashboardRoute
  '/home/editMenu': typeof HomeEditMenuRoute
  '/home/employee': typeof HomeEmployeeRoute
  '/home/notifications': typeof HomeNotificationsRoute
  '/home/stock': typeof HomeStockRoute
  '/home/welcome': typeof HomeWelcomeRoute
  '/home/account': typeof HomeAccountLazyRoute
  '/home/calendar': typeof HomeCalendarLazyRoute
  '/home/help': typeof HomeHelpLazyRoute
  '/home/settings': typeof HomeSettingsLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/home': typeof HomeRouteWithChildren
  '/profileComplete': typeof ProfileCompleteRoute
  '/splashscreen': typeof SplashscreenLazyRoute
  '/home/billing': typeof HomeBillingRoute
  '/home/dashboard': typeof HomeDashboardRoute
  '/home/editMenu': typeof HomeEditMenuRoute
  '/home/employee': typeof HomeEmployeeRoute
  '/home/notifications': typeof HomeNotificationsRoute
  '/home/stock': typeof HomeStockRoute
  '/home/welcome': typeof HomeWelcomeRoute
  '/home/account': typeof HomeAccountLazyRoute
  '/home/calendar': typeof HomeCalendarLazyRoute
  '/home/help': typeof HomeHelpLazyRoute
  '/home/settings': typeof HomeSettingsLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/home'
    | '/profileComplete'
    | '/splashscreen'
    | '/home/billing'
    | '/home/dashboard'
    | '/home/editMenu'
    | '/home/employee'
    | '/home/notifications'
    | '/home/stock'
    | '/home/welcome'
    | '/home/account'
    | '/home/calendar'
    | '/home/help'
    | '/home/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/home'
    | '/profileComplete'
    | '/splashscreen'
    | '/home/billing'
    | '/home/dashboard'
    | '/home/editMenu'
    | '/home/employee'
    | '/home/notifications'
    | '/home/stock'
    | '/home/welcome'
    | '/home/account'
    | '/home/calendar'
    | '/home/help'
    | '/home/settings'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/home'
    | '/profileComplete'
    | '/splashscreen'
    | '/home/billing'
    | '/home/dashboard'
    | '/home/editMenu'
    | '/home/employee'
    | '/home/notifications'
    | '/home/stock'
    | '/home/welcome'
    | '/home/account'
    | '/home/calendar'
    | '/home/help'
    | '/home/settings'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  HomeRoute: typeof HomeRouteWithChildren
  ProfileCompleteRoute: typeof ProfileCompleteRoute
  SplashscreenLazyRoute: typeof SplashscreenLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  HomeRoute: HomeRouteWithChildren,
  ProfileCompleteRoute: ProfileCompleteRoute,
  SplashscreenLazyRoute: SplashscreenLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/home",
        "/profileComplete",
        "/splashscreen"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/home": {
      "filePath": "home.tsx",
      "children": [
        "/home/billing",
        "/home/dashboard",
        "/home/editMenu",
        "/home/employee",
        "/home/notifications",
        "/home/stock",
        "/home/welcome",
        "/home/account",
        "/home/calendar",
        "/home/help",
        "/home/settings"
      ]
    },
    "/profileComplete": {
      "filePath": "profileComplete.tsx"
    },
    "/splashscreen": {
      "filePath": "splashscreen.lazy.tsx"
    },
    "/home/billing": {
      "filePath": "home/billing.tsx",
      "parent": "/home"
    },
    "/home/dashboard": {
      "filePath": "home/dashboard.tsx",
      "parent": "/home"
    },
    "/home/editMenu": {
      "filePath": "home/editMenu.tsx",
      "parent": "/home"
    },
    "/home/employee": {
      "filePath": "home/employee.tsx",
      "parent": "/home"
    },
    "/home/notifications": {
      "filePath": "home/notifications.tsx",
      "parent": "/home"
    },
    "/home/stock": {
      "filePath": "home/stock.tsx",
      "parent": "/home"
    },
    "/home/welcome": {
      "filePath": "home/welcome.tsx",
      "parent": "/home"
    },
    "/home/account": {
      "filePath": "home/account.lazy.tsx",
      "parent": "/home"
    },
    "/home/calendar": {
      "filePath": "home/calendar.lazy.tsx",
      "parent": "/home"
    },
    "/home/help": {
      "filePath": "home/help.lazy.tsx",
      "parent": "/home"
    },
    "/home/settings": {
      "filePath": "home/settings.lazy.tsx",
      "parent": "/home"
    }
  }
}
ROUTE_MANIFEST_END */
